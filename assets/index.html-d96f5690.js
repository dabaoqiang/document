import{_ as r,W as o,X as l,Y as e,$ as t,a1 as i,a0 as s,E as d,Z as n}from"./framework-81e6c38b.js";const c={},h=s('<h2 id="目录" tabindex="-1"><a class="header-anchor" href="#目录" aria-hidden="true">#</a> 目录</h2><div class="custom-container info"><p class="custom-container-title">相关信息</p><p>Spring Boot 使您可以轻松地创建独立的、生产级的基于 Spring 的应用程序，您可以“直接运行”。</p><p>我们对 Spring 平台和第三方库采取固执己见的观点，这样您就可以以最小的麻烦开始工作了。</p><p>大多数 Spring Boot 应用程序需要最少的 Spring 配置。</p></div><h2 id="features-特征" tabindex="-1"><a class="header-anchor" href="#features-特征" aria-hidden="true">#</a> Features 特征</h2><ul><li>创建独立的 Spring 应用程序</li><li>直接嵌入 Tomcat、 Jetty 或 Undertow (不需要部署 WAR 文件)</li><li>尽可能自动配置 Spring 和第三方库</li><li>绝对没有代码生成，也不需要 XML 配置</li></ul><h2 id="分类" tabindex="-1"><a class="header-anchor" href="#分类" aria-hidden="true">#</a> 分类</h2><h3 id="springboot源码解读" tabindex="-1"><a class="header-anchor" href="#springboot源码解读" aria-hidden="true">#</a> SpringBoot源码解读</h3>',6),p=e("li",null,"...",-1),u=e("h3",{id:"",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#","aria-hidden":"true"},"#")],-1),_=e("li",null,"...",-1);function f(g,S){const a=d("RouterLink");return o(),l("div",null,[h,e("ul",null,[e("li",null,[t(a,{to:"/java/SpringBoot/SourceRead/"},{default:i(()=>[n("SpringBoot源码解读")]),_:1})]),p]),u,e("ul",null,[e("li",null,[t(a,{to:"/java/SpringBoot/ApplyProject/"},{default:i(()=>[n("SpringBoot应用集成")]),_:1})]),_])])}const m=r(c,[["render",f],["__file","index.html.vue"]]);export{m as default};
