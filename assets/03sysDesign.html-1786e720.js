import{_ as t,W as l,X as i,Y as e,Z as n,$ as r,E as a}from"./framework-81e6c38b.js";const s={},h=e("h1",{id:"java-优质开源系统设计项目",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#java-优质开源系统设计项目","aria-hidden":"true"},"#"),n(" Java 优质开源系统设计项目")],-1),d=e("h2",{id:"基础框架",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#基础框架","aria-hidden":"true"},"#"),n(" 基础框架")],-1),c={href:"https://github.com/spring-projects/spring-boot",target:"_blank",rel:"noopener noreferrer"},u={href:"https://github.com/tipsy/javalin",target:"_blank",rel:"noopener noreferrer"},p={href:"https://github.com/quarkusio/quarkus",target:"_blank",rel:"noopener noreferrer"},_={href:"https://github.com/google/guice",target:"_blank",rel:"noopener noreferrer"},g={href:"https://github.com/sofastack/sofa-boot",target:"_blank",rel:"noopener noreferrer"},w={href:"https://github.com/sofastack",target:"_blank",rel:"noopener noreferrer"},b={href:"https://github.com/spring-projects/spring-batch",target:"_blank",rel:"noopener noreferrer"},f=e("strong",null,"Spring Batch",-1),k=e("strong",null,"Spring Batch 不是调度框架",-1),m={href:"https://docs.spring.io/spring-batch/docs/4.3.x/reference/html/spring-batch-intro.html#spring-batch-intro",target:"_blank",rel:"noopener noreferrer"},S={href:"https://mrbird.cc/Spring-Batch%E5%85%A5%E9%97%A8.html",target:"_blank",rel:"noopener noreferrer"},y=e("h2",{id:"数据库",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#数据库","aria-hidden":"true"},"#"),n(" 数据库")],-1),x=e("h3",{id:"数据库连接池",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#数据库连接池","aria-hidden":"true"},"#"),n(" 数据库连接池")],-1),A={href:"https://github.com/alibaba/druid",target:"_blank",rel:"noopener noreferrer"},C={href:"https://github.com/brettwooldridge/HikariCP",target:"_blank",rel:"noopener noreferrer"},B=e("h3",{id:"数据库框架",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#数据库框架","aria-hidden":"true"},"#"),n(" 数据库框架")],-1),P={href:"https://github.com/baomidou/mybatis-plus",target:"_blank",rel:"noopener noreferrer"},E={href:"https://github.com/baomidou/mybatis-plus",target:"_blank",rel:"noopener noreferrer"},J={href:"http://www.mybatis.org/mybatis-3/",target:"_blank",rel:"noopener noreferrer"},v={href:"https://github.com/redisson/redisson",target:"_blank",rel:"noopener noreferrer"},M=e("code",null,"Set",-1),D=e("code",null,"SortedSet",-1),T=e("code",null,"Map",-1),j=e("code",null,"List",-1),F=e("code",null,"Queue",-1),I=e("code",null,"Deque",-1),K={href:"https://github.com/redisson/redisson/wiki/Redisson%E9%A1%B9%E7%9B%AE%E4%BB%8B%E7%BB%8D",target:"_blank",rel:"noopener noreferrer"},H=e("h3",{id:"数据同步",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#数据同步","aria-hidden":"true"},"#"),n(" 数据同步")],-1),L={href:"https://github.com/alibaba/canal",target:"_blank",rel:"noopener noreferrer"},z={href:"https://github.com/alibaba/DataX",target:"_blank",rel:"noopener noreferrer"},O={href:"https://github.com/WeiYe-Jing/datax-web",target:"_blank",rel:"noopener noreferrer"},q={href:"https://github.com/DTStack/flinkx",target:"_blank",rel:"noopener noreferrer"},R=e("h3",{id:"时序数据库",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#时序数据库","aria-hidden":"true"},"#"),n(" 时序数据库")],-1),N={href:"https://github.com/apache/iotdb",target:"_blank",rel:"noopener noreferrer"},X={href:"https://github.com/kairosdb/kairosdb",target:"_blank",rel:"noopener noreferrer"},W=e("h2",{id:"搜索引擎",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#搜索引擎","aria-hidden":"true"},"#"),n(" 搜索引擎")],-1),G={href:"https://github.com/elastic/elasticsearch",target:"_blank",rel:"noopener noreferrer"},Q={href:"https://lucene.apache.org/solr/",target:"_blank",rel:"noopener noreferrer"},Z=e("h2",{id:"认证授权",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#认证授权","aria-hidden":"true"},"#"),n(" 认证授权")],-1),Y={href:"https://github.com/Wechat-Group/WxJava",target:"_blank",rel:"noopener noreferrer"},U={href:"https://github.com/dromara/sa-token",target:"_blank",rel:"noopener noreferrer"},V={href:"https://github.com/justauth/JustAuth",target:"_blank",rel:"noopener noreferrer"},$=e("h2",{id:"网络通讯",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#网络通讯","aria-hidden":"true"},"#"),n(" 网络通讯")],-1),ee={href:"https://github.com/netty/netty",target:"_blank",rel:"noopener noreferrer"},ne={href:"https://github.com/square/retrofit",target:"_blank",rel:"noopener noreferrer"},oe={href:"https://square.github.io/okhttp/",target:"_blank",rel:"noopener noreferrer"},re={href:"https://gitee.com/dromara/forest",target:"_blank",rel:"noopener noreferrer"},te={href:"https://github.com/YeautyYE/netty-websocket-spring-boot-starter",target:"_blank",rel:"noopener noreferrer"},le=e("h2",{id:"测试",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#测试","aria-hidden":"true"},"#"),n(" 测试")],-1),ie=e("p",null,"为了能让我们编写的系统更加健壮，必要的测试（UI 测试、单元测试...）是必须的。",-1),ae=e("h3",{id:"测试框架",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#测试框架","aria-hidden":"true"},"#"),n(" 测试框架")],-1),se={href:"http://junit.org/",target:"_blank",rel:"noopener noreferrer"},he={href:"https://github.com/mockito/mockito",target:"_blank",rel:"noopener noreferrer"},de={href:"https://github.com/powermock/powermock",target:"_blank",rel:"noopener noreferrer"},ce={href:"https://github.com/tomakehurst/wiremock",target:"_blank",rel:"noopener noreferrer"},ue={href:"https://github.com/testcontainers/testcontainers-java",target:"_blank",rel:"noopener noreferrer"},pe=e("p",null,"相关阅读：",-1),_e={href:"https://martinfowler.com/articles/practical-test-pyramid.html",target:"_blank",rel:"noopener noreferrer"},ge={href:"https://juejin.im/post/6844903982058618894",target:"_blank",rel:"noopener noreferrer"},we=e("h3",{id:"测试平台",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#测试平台","aria-hidden":"true"},"#"),n(" 测试平台")],-1),be={href:"https://github.com/metersphere/metersphere",target:"_blank",rel:"noopener noreferrer"},fe={href:"https://www.apifox.cn/",target:"_blank",rel:"noopener noreferrer"},ke=e("h3",{id:"api-调试",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#api-调试","aria-hidden":"true"},"#"),n(" API 调试")],-1),me={href:"https://insomnia.rest/",target:"_blank",rel:"noopener noreferrer"},Se={href:"https://www.getpostman.com/",target:"_blank",rel:"noopener noreferrer"},ye={href:"https://github.com/liyasthomas/postwoman",target:"_blank",rel:"noopener noreferrer"},xe=e("h2",{id:"任务调度",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#任务调度","aria-hidden":"true"},"#"),n(" 任务调度")],-1),Ae={href:"https://github.com/quartz-scheduler/quartz",target:"_blank",rel:"noopener noreferrer"},Ce=e("code",null,"quartz",-1),Be=e("code",null,"elastic-job",-1),Pe=e("code",null,"quartz",-1),Ee={href:"https://github.com/xuxueli/xxl-job",target:"_blank",rel:"noopener noreferrer"},Je={href:"http://elasticjob.io/index_zh.html",target:"_blank",rel:"noopener noreferrer"},ve={href:"https://github.com/analysys/EasyScheduler",target:"_blank",rel:"noopener noreferrer"},Me={href:"https://gitee.com/KFCFans/PowerJob",target:"_blank",rel:"noopener noreferrer"},De={href:"http://www.powerjob.tech/",target:"_blank",rel:"noopener noreferrer"},Te={href:"https://github.com/apache/dolphinscheduler",target:"_blank",rel:"noopener noreferrer"},je=e("p",null,"相关阅读：",-1),Fe={href:"https://mp.weixin.qq.com/s/jqN4noo5NazckPCehWFgpA",target:"_blank",rel:"noopener noreferrer"},Ie={href:"https://mp.weixin.qq.com/s?__biz=Mzg2OTA0Njk0OA==&mid=2247518215&idx=1&sn=91e467f39322d2e7979b85fe235822d2&chksm=cea1c7ccf9d64edaf966c95923d72d337bf5e655a773a3d295d65fc92e4535ae5d8b0e6d9d86&token=2063686030&lang=zh_CN#rd",target:"_blank",rel:"noopener noreferrer"},Ke=e("h2",{id:"分布式",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#分布式","aria-hidden":"true"},"#"),n(" 分布式")],-1),He=e("h3",{id:"api-网关",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#api-网关","aria-hidden":"true"},"#"),n(" API 网关")],-1),Le=e("p",null,"微服务下一个系统被拆分为多个服务，但是像 安全认证，流量控制，日志，监控等功能是每个服务都需要的，没有网关的话，我们就需要在每个服务中单独实现，这使得我们做了很多重复的事情并且没有一个全局的视图来统一管理这些功能。",-1),ze=e("p",null,[n("综上："),e("strong",null,"一般情况下，网关一般都会提供请求转发、安全认证（身份/权限认证）、流量控制、负载均衡、容灾、日志、监控这些功能。")],-1),Oe=e("p",null,[n("上面介绍了这么多功能实际上网关主要做了一件事情："),e("strong",null,"请求过滤"),n(" 。权限校验、流量控制这些都可以通过过滤器实现，请求转也是通过过滤器实现的。")],-1),qe={href:"https://github.com/Kong/kong",target:"_blank",rel:"noopener noreferrer"},Re={href:"https://github.com/Dromara/soul",target:"_blank",rel:"noopener noreferrer"},Ne={href:"https://github.com/spring-cloud/spring-cloud-gateway",target:"_blank",rel:"noopener noreferrer"},Xe={href:"https://github.com/Netflix/zuul",target:"_blank",rel:"noopener noreferrer"},We=e("h3",{id:"配置中心",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#配置中心","aria-hidden":"true"},"#"),n(" 配置中心")],-1),Ge={href:"https://github.com/ctripcorp/apollo",target:"_blank",rel:"noopener noreferrer"},Qe={href:"https://github.com/alibaba/nacos",target:"_blank",rel:"noopener noreferrer"},Ze={href:"https://github.com/spring-cloud/spring-cloud-config",target:"_blank",rel:"noopener noreferrer"},Ye={href:"https://github.com/hashicorp/consul",target:"_blank",rel:"noopener noreferrer"},Ue=e("h3",{id:"链路追踪",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#链路追踪","aria-hidden":"true"},"#"),n(" 链路追踪")],-1),Ve=e("p",null,"目前分布式链路追踪系统基本都是根据谷歌的《Dapper 大规模分布式系统的跟踪系统》这篇论文发展而来，主流的有 Pinpoint，Skywalking ，CAT（当然也有其他的例如 Zipkin，Jaeger 等产品，不过总体来说不如前面选取的 3 个完成度高）等。",-1),$e={href:"https://github.com/apache/skywalking",target:"_blank",rel:"noopener noreferrer"},en={href:"https://github.com/openzipkin/zipkin",target:"_blank",rel:"noopener noreferrer"},nn={href:"https://github.com/dianping/cat",target:"_blank",rel:"noopener noreferrer"},on={href:"https://skywalking.apache.org/zh/blog/2019-03-29-introduction-of-skywalking-and-simple-practice.html",target:"_blank",rel:"noopener noreferrer"},rn=e("h2",{id:"高性能",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#高性能","aria-hidden":"true"},"#"),n(" 高性能")],-1),tn=e("h3",{id:"消息队列",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#消息队列","aria-hidden":"true"},"#"),n(" 消息队列")],-1),ln=e("p",null,[e("strong",null,"分布式队列"),n(" ：")],-1),an={href:"https://github.com/apache/rocketmq",target:"_blank",rel:"noopener noreferrer"},sn={href:"https://github.com/apache/kafka",target:"_blank",rel:"noopener noreferrer"},hn={href:"https://github.com/Snailclimb/JavaGuide/blob/master/docs/system-design/data-communication/Kafka%E5%85%A5%E9%97%A8%E7%9C%8B%E8%BF%99%E4%B8%80%E7%AF%87%E5%B0%B1%E5%A4%9F%E4%BA%86.md",target:"_blank",rel:"noopener noreferrer"},dn={href:"https://github.com/rabbitmq",target:"_blank",rel:"noopener noreferrer"},cn=e("p",null,[e("strong",null,"内存队列"),n(" ：")],-1),un={href:"https://github.com/LMAX-Exchange/disruptor",target:"_blank",rel:"noopener noreferrer"},pn={href:"https://tech.meituan.com/2016/11/18/disruptor.html",target:"_blank",rel:"noopener noreferrer"},_n=e("p",null,[e("strong",null,"管理工具"),n(" ：")],-1),gn={href:"https://github.com/obsidiandynamics/kafdrop",target:"_blank",rel:"noopener noreferrer"},wn={href:"https://github.com/smartloli/EFAK",target:"_blank",rel:"noopener noreferrer"},bn=e("h3",{id:"数据库中间件",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#数据库中间件","aria-hidden":"true"},"#"),n(" 数据库中间件")],-1),fn={href:"https://github.com/apache/shardingsphere",target:"_blank",rel:"noopener noreferrer"},kn={href:"https://shardingsphere.apache.org/document/current/cn/overview/",target:"_blank",rel:"noopener noreferrer"},mn={href:"https://github.com/MyCatApache/MyCat2",target:"_blank",rel:"noopener noreferrer"},Sn={href:"https://github.com/baomidou/dynamic-datasource-spring-boot-starter",target:"_blank",rel:"noopener noreferrer"},yn={href:"https://zhuanlan.zhihu.com/p/87144535",target:"_blank",rel:"noopener noreferrer"},xn=e("h3",{id:"线程池",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#线程池","aria-hidden":"true"},"#"),n(" 线程池")],-1),An={href:"https://github.com/opengoofy/hippo4j",target:"_blank",rel:"noopener noreferrer"},Cn={href:"https://github.com/dromara/dynamic-tp",target:"_blank",rel:"noopener noreferrer"},Bn={href:"https://tech.meituan.com/2020/04/02/java-pooling-pratice-in-meituan.html",target:"_blank",rel:"noopener noreferrer"},Pn=e("h3",{id:"缓存",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#缓存","aria-hidden":"true"},"#"),n(" 缓存")],-1),En={href:"https://github.com/ben-manes/caffeine",target:"_blank",rel:"noopener noreferrer"},Jn={href:"https://github.com/redis/redis",target:"_blank",rel:"noopener noreferrer"},vn=e("h2",{id:"高可用",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#高可用","aria-hidden":"true"},"#"),n(" 高可用")],-1),Mn=e("h3",{id:"限流",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#限流","aria-hidden":"true"},"#"),n(" 限流")],-1),Dn=e("p",null,[e("strong",null,"分布式限流"),n(" ：")],-1),Tn={href:"https://github.com/alibaba/Sentinel",target:"_blank",rel:"noopener noreferrer"},jn={href:"https://github.com/Netflix/Hystrix",target:"_blank",rel:"noopener noreferrer"},Fn={href:"https://sentinelguard.io/zh-cn/blog/sentinel-vs-hystrix.html",target:"_blank",rel:"noopener noreferrer"},In=e("p",null,[e("strong",null,"单机限流"),n(" ：")],-1),Kn={href:"https://github.com/vladimir-bukhtoyarov/bucket4j",target:"_blank",rel:"noopener noreferrer"},Hn={href:"https://github.com/resilience4j/resilience4j",target:"_blank",rel:"noopener noreferrer"},Ln=e("h3",{id:"监控",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#监控","aria-hidden":"true"},"#"),n(" 监控")],-1),zn={href:"https://github.com/codecentric/spring-boot-admin",target:"_blank",rel:"noopener noreferrer"},On={href:"https://github.com/dropwizard/metrics",target:"_blank",rel:"noopener noreferrer"},qn=e("strong",null,"JVM",-1),Rn=e("h3",{id:"日志",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#日志","aria-hidden":"true"},"#"),n(" 日志")],-1),Nn=e("li",null,[e("strong",null,"EKL 老三件套"),n(" : 最原始的时候，ELK 是由 3 个开源项目的首字母构成，分别是 "),e("strong",null,"E"),n("lasticsearch 、"),e("strong",null,"L"),n("ogstash、"),e("strong",null,"K"),n("ibana。")],-1),Xn=e("li",null,[e("strong",null,"新一代 ELK 架构"),n(" : Elasticsearch+Logstash+Kibana+Beats。")],-1),Wn=e("strong",null,"EFK",-1),Gn={href:"https://github.com/fluent/fluentd",target:"_blank",rel:"noopener noreferrer"},Qn={href:"https://gitee.com/dromara/TLog",target:"_blank",rel:"noopener noreferrer"},Zn=e("hr",null,null,-1),Yn=e("h2",{id:"参考",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#参考","aria-hidden":"true"},"#"),n(" 参考")],-1),Un={href:"https://javaguide.cn/open-source-project/system-design.html",target:"_blank",rel:"noopener noreferrer"};function Vn($n,eo){const o=a("ExternalLinkIcon");return l(),i("div",null,[h,d,e("ul",null,[e("li",null,[e("strong",null,[e("a",c,[n("Spring Boot open in new window"),r(o)])]),n(" ：Spring Boot 可以轻松创建独立的生产级基于 Spring 的应用程序,内置 web 服务器让你可以像运行普通 Java 程序一样运行项 目。另外，大部分 Spring Boot 项目只需要少量的配置即可，这有别于 Spring 的重配置。")]),e("li",null,[e("strong",null,[e("a",u,[n("Javalinopen in new window"),r(o)])]),n(" ：一个轻量级的 Web 框架，同时支持 Java 和 Kotlin，被微软、红帽、Uber等公司使用。")]),e("li",null,[e("strong",null,[e("a",p,[n("Quarkusopen in new window"),r(o)])]),n(" : 用于编写 Java 应用程序的云原生和容器优先的框架。")]),e("li",null,[e("strong",null,[e("a",_,[n("Guiceopen in new window"),r(o)])]),n(" ：Google 开源的一个轻量级依赖注入框架，相当于一个功能极简化的轻量级 Spring Boot。在某些情况下非常实用，就比如说我们的项目只需要使用依赖注入，不需要 AOP 等功能特性。")]),e("li",null,[e("strong",null,[e("a",g,[n("SOFABootopen in new window"),r(o)])]),n(" ：SOFABoot 基于 Spring Boot ，不过在其基础上增加了 Readiness Check，类隔离，日志空间隔离等等能力。 配套提供的还有：SOFARPC（RPC 框架）、SOFABolt（基于 Netty 的远程通信框架）、SOFARegistry（注册中心）...详情请参考："),e("a",w,[n("SOFAStack open in new window"),r(o)]),n(" 。")]),e("li",null,[e("a",b,[f,n("open in new window"),r(o)]),n(" : Spring Batch 是一个轻量级但功能又十分全面的批处理框架，主要用于批处理场景比如从数据库、文件或队列中读取大量记录。不过，需要注意的是："),k,n("。商业和开源领域都有许多优秀的企业调度框架比如 Quartz、XXL-JOB、Elastic-Job。它旨在与调度程序一起工作，而不是取代调度程序。更多介绍请参考 "),e("a",m,[n("Spring Batch 官方文档open in new window"),r(o)]),n("，入门教程可以参考 "),e("a",S,[n("Spring Batch 从入门到实战open in new window"),r(o)]),n("。")])]),y,x,e("ul",null,[e("li",null,[e("strong",null,[e("a",A,[n("Druidopen in new window"),r(o)])]),n(" : 阿里巴巴数据库事业部出品，为监控而生的数据库连接池。")]),e("li",null,[e("strong",null,[e("a",C,[n("HikariCPopen in new window"),r(o)])]),n(" : 一个可靠的高性能 JDBC 连接池。Springboot 2.0 选择 HikariCP 作为默认数据库连接池。")])]),B,e("ul",null,[e("li",null,[e("strong",null,[e("a",P,[n("MyBatis-Plusopen in new window"),r(o)])]),n(" : "),e("a",E,[n("MyBatis-Plusopen in new window"),r(o)]),n("（简称 MP）是一个 "),e("a",J,[n("MyBatisopen in new window"),r(o)]),n(" 的增强工具，在 MyBatis 的基础上只做增强不做改变，为简化开发、提高效率而生。")]),e("li",null,[e("strong",null,[e("a",v,[n("Redissonopen in new window"),r(o)])]),n(" ： Redis 基础上的一个 Java 驻内存数据网格（In-Memory Data Grid）,支持超过 30 个对象和服务:"),M,n(","),D,n(", "),T,n(", "),j,n(", "),F,n(", "),I,n(" ......，并且提供了多种分布式锁的实现。更多介绍请看："),e("a",K,[n("《Redisson 项目介绍》open in new window"),r(o)]),n("。")])]),H,e("ul",null,[e("li",null,[e("strong",null,[e("a",L,[n("Canalopen in new window"),r(o)])]),n(" [kə'næl] : Canal 译意为水道/管道/沟渠，主要用途是基于 MySQL 数据库增量日志解析，提供增量数据订阅和消费。")]),e("li",null,[e("strong",null,[e("a",z,[n("DataXopen in new window"),r(o)])]),n(" ：DataX 是阿里巴巴集团内被广泛使用的离线数据同步工具/平台，实现包括 MySQL、Oracle、SqlServer、Postgre、HDFS、Hive、ADS、HBase、TableStore(OTS)、MaxCompute(ODPS)、DRDS 等各种异构数据源之间高效的数据同步功能。相关项目："),e("strong",null,[e("a",O,[n("DataX-Webopen in new window"),r(o)])]),n(" （DataX 集成可视化页面，选择数据源即可一键生成数据同步任务）。")])]),e("p",null,[n("其他："),e("strong",null,[e("a",q,[n("Flinkxopen in new window"),r(o)])]),n(" （基于 Flink 的分布式数据同步工具）。")]),R,e("ul",null,[e("li",null,[e("strong",null,[e("a",N,[n("IoTDBopen in new window"),r(o)])]),n(" ：一款 Java 语言编写的国产时序数据库，为用户提供数据收集、存储和分析等服务。与 Hadoop、Spark 和可视化工具(如 Grafana)无缝集成，满足了工业 IoT 领域中海量数据存储、高吞吐量数据写入和复杂数据查询分析的需求。")]),e("li",null,[e("strong",null,[e("a",X,[n("KairosDBopen in new window"),r(o)])]),n(" ：一个基于 Cassandra 的快速分布式可扩展时间序列数据库。")])]),W,e("ul",null,[e("li",null,[e("strong",null,[e("a",G,[n("Elasticsearchopen in new window"),r(o)])]),n(" （推荐）：开源，分布式，RESTful 搜索引擎。")]),e("li",null,[e("strong",null,[e("a",Q,[n("Solropen in new window"),r(o)])]),n(" : Solr（读作“solar”）是 Apache Lucene 项目的开源企业搜索平台。")])]),Z,e("ul",null,[e("li",null,[e("strong",null,[e("a",Y,[n("WxJavaopen in new window"),r(o)])]),n(" : WxJava （微信开发 Java SDK），支持包括微信支付、开放平台、小程序、企业微信/企业号和公众号等的后端开发。")]),e("li",null,[e("strong",null,[e("a",U,[n("Sa-Tokenopen in new window"),r(o)])]),n(" ：轻量级 Java 权限认证框架。支持认证授权、单点登录、踢人下线、自动续签等功能。")]),e("li",null,[e("strong",null,[e("a",V,[n("JustAuthopen in new window"),r(o)])]),n(" ：小而全而美的第三方登录开源组件。目前已经集成了诸如：Github、Gitee、支付宝、新浪微博、微信、Google、Facebook、Twitter、StackOverflow 等国内外数十家第三方平台。")])]),$,e("ul",null,[e("li",null,[e("strong",null,[e("a",ee,[n("Nettyopen in new window"),r(o)])]),n(" : 一个基于 NIO 的 client-server(客户端服务器)框架，使用它可以快速简单地开发网络应用程序。")]),e("li",null,[e("strong",null,[e("a",ne,[n("Retrofitopen in new window"),r(o)])]),n(" ：适用于 Android 和 Java 的类型安全的 HTTP 客户端。Retrofit 的 HTTP 请求使用的是 "),e("a",oe,[n("OkHttpopen in new window"),r(o)]),n(" 库（一款被广泛使用网络框架）。")]),e("li",null,[e("strong",null,[e("a",re,[n("Forestopen in new window"),r(o)])]),n(" ：轻量级 HTTP 客户端 API 框架，让 Java 发送 HTTP/HTTPS 请求不再难。它比 OkHttp 和 HttpClient 更高层，是封装调用第三方 restful api client 接口的好帮手，是 retrofit 和 feign 之外另一个选择。")]),e("li",null,[e("strong",null,[e("a",te,[n("netty-websocket-spring-boot-starteropen in new window"),r(o)])]),n(" :帮助你在 Spring Boot 中使用 Netty 来开发 WebSocket 服务器，并像 spring-websocket 的注解开发一样简单。")])]),le,ie,ae,e("ul",null,[e("li",null,[e("strong",null,[e("a",se,[n("JUnitopen in new window"),r(o)])]),n(" : Java 测试框架。")]),e("li",null,[e("strong",null,[e("a",he,[n("Mockitoopen in new window"),r(o)])]),n(" ：Mockito 是一个模拟测试框架，可以让你用优雅，简洁的接口写出漂亮的单元测试。（对那些不容易构建的对象用一个虚拟对象来代替，使其在调试期间用来作为真实对象的替代品）")]),e("li",null,[e("strong",null,[e("a",de,[n("PowerMockopen in new window"),r(o)])]),n(" ： 编写单元测试仅靠 Mockito 是不够。因为 Mockito 无法 mock 私有方法、final 方法及静态方法等。PowerMock 这个 framework，主要是为了扩展其他 mock 框架，如 Mockito、EasyMock。它使用一个自定义的类加载器，纂改字节码，突破 Mockito 无法 mock 静态方法、构造方法、final 类、final 方法以及私有方法的限制。")]),e("li",null,[e("strong",null,[e("a",ce,[n("WireMockopen in new window"),r(o)])]),n(" ：模拟 HTTP 服务的工具（Mock your APIs）。")]),e("li",null,[e("strong",null,[e("a",ue,[n("Testcontainersopen in new window"),r(o)])]),n(" ：一个支持 JUnit 的测试工具库，提供轻量级的且一次性的常见数据库测试支持、Selenium Web 浏览器或者其他任何可以在 Docker 容器中运行的实例支持。")])]),pe,e("ul",null,[e("li",null,[e("a",_e,[n("The Practical Test Pyramid- Martin Fowleropen in new window"),r(o)]),n(" (很赞的一篇文章，不过是英文的)")]),e("li",null,[e("a",ge,[n("浅谈测试之 PowerMockopen in new window"),r(o)])])]),we,e("ul",null,[e("li",null,[e("strong",null,[e("a",be,[n("MeterSphereopen in new window"),r(o)])]),n(" : 一站式开源持续测试平台，涵盖测试跟踪、接口测试、性能测试、团队协作等功能，全面兼容 JMeter、Postman、Swagger 等开源、主流标准。")]),e("li",null,[e("strong",null,[e("a",fe,[n("Apifoxopen in new window"),r(o)])]),n(" ：API 文档、API 调试、API Mock、API 自动化测试。")])]),ke,e("ul",null,[e("li",null,[e("strong",null,[e("a",me,[n("Insomniaopen in new window"),r(o)])]),n(" :像人类而不是机器人一样调试 API。我平时经常用的，界面美观且轻量，总之很喜欢。")]),e("li",null,[e("strong",null,[e("a",Se,[n("Postmanopen in new window"),r(o)])]),n(" ：API 请求生成器。")]),e("li",null,[e("strong",null,[e("a",ye,[n("Postwomanopen in new window"),r(o)])]),n(" ：API 请求生成器-一个免费、快速、漂亮的 Postma 替代品。")])]),xe,e("ul",null,[e("li",null,[e("strong",null,[e("a",Ae,[n("Quartzopen in new window"),r(o)])]),n(" ：一个很火的开源任务调度框架，Java 定时任务领域的老大哥或者说参考标准， 很多其他任务调度框架都是基于 "),Ce,n(" 开发的，比如当当网的"),Be,n("就是基于"),Pe,n("二次开发之后的分布式调度解决方案")]),e("li",null,[e("strong",null,[e("a",Ee,[n("XXL-JOBopen in new window"),r(o)])]),n(" :XXL-JOB 是一个分布式任务调度平台，其核心设计目标是开发迅速、学习简单、轻量级、易扩展。现已开放源代码并接入多家公司线上产品线，开箱即用。")]),e("li",null,[e("strong",null,[e("a",Je,[n("Elastic-Jobopen in new window"),r(o)])]),n(" ：Elastic-Job 是当当网开源的一个基于 Quartz 和 Zookeeper 的分布式调度解决方案，由两个相互独立的子项目 Elastic-Job-Lite 和 Elastic-Job-Cloud 组成，一般我们只要使用 Elastic-Job-Lite 就好。")]),e("li",null,[e("strong",null,[e("a",ve,[n("EasyScheduleropen in new window"),r(o)])]),n(" （已经更名为 DolphinScheduler，已经成为 Apache 孵化器项目）： Easy Scheduler 是一个分布式工作流任务调度系统，主要解决“复杂任务依赖但无法直接监控任务健康状态”的问题。Easy Scheduler 以 DAG 方式组装任务，可以实时监控任务的运行状态。同时，它支持重试，重新运行等操作... 。")]),e("li",null,[e("strong",null,[e("a",Me,[n("PowerJobopen in new window"),r(o)])]),n(" ：新一代分布式任务调度与计算框架，支持 CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全，欢迎各位接入使用！"),e("a",De,[n("http://www.powerjob.tech/"),r(o)]),n(" 。")]),e("li",null,[e("strong",null,[e("a",Te,[n("DolphinScheduleropen in new window"),r(o)])]),n(" ：分布式易扩展的可视化工作流任务调度平台。")])]),je,e("ul",null,[e("li",null,[e("a",Fe,[n("Spring Job、Quartz、XXL-Job 对比+全解析open in new window"),r(o)])]),e("li",null,[e("a",Ie,[n("推荐 5 个 YYDS 的 Java 项目open in new window"),r(o)])])]),Ke,He,Le,ze,Oe,e("ol",null,[e("li",null,[e("strong",null,[e("a",qe,[n("Kongopen in new window"),r(o)])]),n(" ：Kong 是一个云原生、快速的、可伸缩的分布式微服务抽象层(也称为 API 网关、API 中间件或在某些情况下称为服务网格)。2015 年作为开源项目发布，其核心价值是高性能和可扩展性。")]),e("li",null,[e("strong",null,[e("a",Re,[n("Soulopen in new window"),r(o)])]),n(" ：高性能、基于 webflux 的反应式 Java API 网关")]),e("li",null,[e("strong",null,[e("a",Ne,[n("Spring Cloud Gatewayopen in new window"),r(o)])]),n(" : 基于 Spring Framework 5.x 和 Spring Boot 2.x 构建的高性能网关。")]),e("li",null,[e("strong",null,[e("a",Xe,[n("Zuulopen in new window"),r(o)])]),n(" : Zuul 是一个 L7 应用程序网关，它提供了动态路由，监视，弹性，安全性等功能。")])]),We,e("ul",null,[e("li",null,[e("strong",null,[e("a",Ge,[n("Apolloopen in new window"),r(o)])]),n("（推荐） ：Apollo（阿波罗）是携程框架部门研发的分布式配置中心，能够集中化管理应用不同环境、不同集群的配置，配置修改后能够实时推送到应用端，并且具备规范的权限、流程治理等特性，适用于微服务配置管理场景。")]),e("li",null,[e("strong",null,[e("a",Qe,[n("Nacosopen in new window"),r(o)])]),n("（推荐）：Nacos 是 Spring Cloud Alibaba 提供的服务注册发现组件，类似于 Consul、Eureka。并且，提供了分布式配置管理功能。")]),e("li",null,[e("strong",null,[e("a",Ze,[n("Spring Cloud Configopen in new window"),r(o)])]),n(" ： Spring Cloud Config 是 Spring Cloud 家族中最早的配置中心，虽然后来又发布了 Consul 可以代替配置中心功能，但是 Config 依然适用于 Spring Cloud 项目，通过简单的配置即可实现功能。")]),e("li",null,[e("strong",null,[e("a",Ye,[n("Consulopen in new window"),r(o)])]),n(" ：Consul 是 HashiCorp 公司推出的开源软件，提供了微服务系统中的服务治理、配置中心、控制总线等功能。这些功能中的每一个都可以根据需要单独使用，也可以一起使用以构建全方位的服务网格，总之 Consul 提供了一种完整的服务网格解决方案。")])]),Ue,Ve,e("ol",null,[e("li",null,[e("strong",null,[e("a",$e,[n("Skywalkingopen in new window"),r(o)])]),n(" : 针对分布式系统的应用性能监控，尤其是针对微服务、云原生和面向容器的分布式系统架构。")]),e("li",null,[e("strong",null,[e("a",en,[n("Zipkinopen in new window"),r(o)])]),n(" ：Zipkin 是一个分布式跟踪系统。它有助于收集解决服务体系结构中的延迟问题所需的时序数据。功能包括该数据的收集和查找。")]),e("li",null,[e("strong",null,[e("a",nn,[n("CATopen in new window"),r(o)])]),n(" ： CAT 作为服务端项目基础组件，提供了 Java, C/C++, Node.js, Python, Go 等多语言客户端，已经在美团点评的基础架构中间件框架（MVC 框架，RPC 框架，数据库框架，缓存框架等，消息队列，配置系统等）深度集成，为美团点评各业务线提供系统丰富的性能指标、健康状况、实时告警等。")])]),e("p",null,[n("相关阅读： "),e("a",on,[n("Skywalking 官网对于主流开源链路追踪系统的对比open in new window"),r(o)])]),rn,tn,ln,e("ol",null,[e("li",null,[e("strong",null,[e("a",an,[n("RocketMQopen in new window"),r(o)])]),n(" ：阿里巴巴开源的一款高性能、高吞吐量的分布式消息中间件。")]),e("li",null,[e("strong",null,[e("a",sn,[n("Kafakaopen in new window"),r(o)])]),n(": Kafka 是一种分布式的，基于发布 / 订阅的消息系统。关于它的入门可以查看："),e("a",hn,[n("Kafka 入门看这一篇就够了open in new window"),r(o)])]),e("li",null,[e("strong",null,[e("a",dn,[n("RabbitMQopen in new window"),r(o)])]),n(" :由 erlang 开发的基于 AMQP（Advanced Message Queue 高级消息队列协议）协议实现的消息队列。")])]),cn,e("p",null,[e("strong",null,[e("a",un,[n("Disruptoropen in new window"),r(o)])]),n(" ： Disruptor 是英国外汇交易公司 LMAX 开发的一个高性能队列，研发的初衷是解决内存队列的延迟问题（在性能测试中发现竟然与 I/O 操作处于同样的数量级）。相关阅读 ："),e("a",pn,[n("《高性能内存队列——Disruptor》open in new window"),r(o)]),n(" 。")]),_n,e("ol",null,[e("li",null,[e("strong",null,[e("a",gn,[n("Kafdropopen in new window"),r(o)])]),n(" : 一个用于查看 Kafka 主题和浏览消费者组的 Web UI。")]),e("li",null,[e("strong",null,[e("a",wn,[n("EFAKopen in new window"),r(o)])]),n(" （Eagle For Apache Kafka，以前叫做 Kafka Eagle） ：一个简单的高性能监控系统，用于对 Kafka 集群进行全面的监控和管理。")])]),bn,e("ul",null,[e("li",null,[e("strong",null,[e("a",fn,[n("ShardingSphereopen in new window"),r(o)])]),n(" ：ShardingSphere 是一套开源的分布式数据库中间件解决方案组成的生态圈，它由 Sharding-JDBC、Sharding-Proxy 和 Sharding-Sidecar（计划中）这 3 款相互独立的产品组成。 他们均提供标准化的数据分片、分布式事务和数据库治理功能，可适用于如 Java 同构、异构语言、云原生等各种多样化的应用场景。中文文档："),e("a",kn,[n("https://shardingsphere.apache.org/document/current/cn/overview/open in new window"),r(o)]),n(" 。")]),e("li",null,[e("strong",null,[e("a",mn,[n("MyCatopen in new window"),r(o)])]),n(" : MyCat 是数据库分库分表的中间件，MyCat 使用最多的两个功能是：读写分离和分库分表。MyCat 是一些社区爱好者在阿里 Cobar 的基础上进行二次开发，解决了 Cobar 当时存 在的一些问题，并且加入了许多新的功能在其中。")]),e("li",null,[e("strong",null,[e("a",Sn,[n("dynamic-datasource-spring-boot-starteropen in new window"),r(o)])]),n(" ：dynamic-datasource-spring-boot-starter 是一个基于 springboot 的快速集成多数据源的启动器。如果说你有配置多数据源、读写分离等需求的话，可以了解一下这个项目。")])]),e("p",null,[n("相关阅读："),e("a",yn,[n("数据库中间件详解（精品长文）open in new window"),r(o)])]),xn,e("ul",null,[e("li",null,[e("strong",null,[e("a",An,[n("Hippo-4Jopen in new window"),r(o)])]),n(" ：一款强大的动态线程池框架，解决了传统线程池使用存在的一些痛点比如线程池参数没办法动态修改、不支持运行时变量的传递、无法执行优雅关闭。除了支持动态修改线程池参数、线程池任务传递上下文，还支持通知报警、运行监控等开箱即用的功能。")]),e("li",null,[e("strong",null,[e("a",Cn,[n("Dynamic Tpopen in new window"),r(o)])]),n(" ：一款基于 SpringBoot 的轻量级动态线程池，参考"),e("a",Bn,[n("美团线程池实践open in new window"),r(o)]),n("，内置监控告警功能，提供多种报警维度。")])]),Pn,e("ul",null,[e("li",null,[e("strong",null,[e("a",En,[n("Caffeineopen in new window"),r(o)])]),n(" : 一款强大的本地缓存解决方案，性能非常 🐂。")]),e("li",null,[e("strong",null,[e("a",Jn,[n("Redisopen in new window"),r(o)])]),n(" ：一个使用 C 语言开发的内存数据库，分布式缓存首选。")])]),vn,Mn,Dn,e("ul",null,[e("li",null,[e("strong",null,[e("a",Tn,[n(" Sentinelopen in new window"),r(o)])]),n("（推荐）：面向分布式服务架构的高可用防护组件，主要以流量为切入点，从流量控制、熔断降级、系统自适应保护等多个维度来帮助用户保障微服务的稳定性。")]),e("li",null,[e("strong",null,[e("a",jn,[n("Hystrixopen in new window"),r(o)])]),n(" ：类似于 Sentinel 。")])]),e("p",null,[n("相关阅读："),e("a",Fn,[n("Sentinel 与 Hystrix 的对比open in new window"),r(o)])]),In,e("ul",null,[e("li",null,[e("strong",null,[e("a",Kn,[n("Bucket4jopen in new window"),r(o)])]),n(" ：一个非常不错的基于令牌/漏桶算法的限流库。")]),e("li",null,[e("strong",null,[e("a",Hn,[n("Resilience4jopen in new window"),r(o)])]),n(" ：一个轻量级的容错组件，其灵感来自于 Hystrix。")])]),Ln,e("ul",null,[e("li",null,[e("strong",null,[e("a",zn,[n("Spring Boot Adminopen in new window"),r(o)])]),n(" ：管理和监控 Spring Boot 应用程序。")]),e("li",null,[e("strong",null,[e("a",On,[n("Metricsopen in new window"),r(o)])]),n(" ：捕获"),qn,n("和应用程序级别的指标。所以你知道发生了什么事。")])]),Rn,e("ul",null,[Nn,Xn,e("li",null,[Wn,n(" : EFK 中的 F 代表的是 "),e("a",Gn,[n("Fluentdopen in new window"),r(o)]),n("。")]),e("li",null,[e("strong",null,[e("a",Qn,[n("TLogopen in new window"),r(o)])]),n(" ：一个轻量级的分布式日志标记追踪神器，10 分钟即可接入，自动对日志打标签完成微服务的链路追踪。")])]),Zn,Yn,e("blockquote",null,[e("p",null,[e("a",Un,[n("https://javaguide.cn/open-source-project/system-design.html"),r(o)])])])])}const oo=t(s,[["render",Vn],["__file","03sysDesign.html.vue"]]);export{oo as default};
